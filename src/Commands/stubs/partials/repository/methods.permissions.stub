public function index(): LengthAwarePaginator
{
    if ($search = request()->input('search')) {
        return $data = $MODEL_NAME$::search($search)->query(fn($query) => $query)->paginate();
    }
    return $data = $MODEL_NAME$::query()->paginate();
}
public function store(object $data): ?$MODEL_NAME$
{
    $relationships = $this->relationships;
    $model = new $MODEL_NAME$((array) $data);
    foreach ($relationships as $relationship) {
        $method = Str::snake($relationship);
        if (isset($data->$method) && $data->$method?->id) {
            $model->$relationship()->associate($data->$method?->id);
        }
    }
    // Extend the saving logic here if need be.
    $model->saveOrFail();
    return $model;
}
public function show(): $MODEL_NAME$ {
    $relationships = $this->relationships;
    $this->model->load($relationships);
    $this->model->assigned = \Auth::user()->hasPermissionTo($this->model);
    return $this->model;
}

public function update(object $data): $MODEL_NAME$
{
    $relationships = $this->relationships;
    foreach ($relationships as $relationship) {
        $method = Str::snake($relationship);
        if (isset($data->$method) && $data->$method?->id) {
            $this->model->$relationship()->associate($data->$method?->id);
        } else {
             $this->model->$relationship()->dissociate();
         }
    }
    $this->model->update((array) $data);

    $this->model->saveOrFail();
    return $this->model;
}

public function destroy(): bool
{
    return !!$this->model->delete();
}
public function dt(): LengthAwarePaginator
{
    $q = $MODEL_NAME$::query();
    return \PrimevueDatatables::of($q)->make();
}
