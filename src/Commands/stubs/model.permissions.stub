<?php

namespace $NAMESPACE$;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use $MODULE_NAMESPACE$\$MODULE$\Database\Factories\$NAME$Factory;
use Laravel\Scout\Searchable;
use Illuminate\Support\Str;
$IMPORTS$

class $CLASS$ extends \Spatie\Permission\Models\Permission
{
    use HasFactory, Searchable;

    protected $fillable = $FILLABLE$;
    protected $hidden = $HIDDEN$;
    protected $casts = [$CASTS$];
    protected $appends = ['can','title','group'];

    protected function getCanAttribute(): array
    {
        $policies = collect(["viewAny","view","create", "update","delete","restore","forceDelete","review"]);
        return $policies->map(
            fn (string $policy)  => [
                'policy' => $policy,
                'can' =>\Auth::check() && \Auth::user()->can($policy, $this)
            ])->pluck('can','policy')->toArray();
    }

    protected static function newFactory(): $NAME$Factory
    {
        return $NAME$Factory::new();
    }
    public function getTitleAttribute(): string
    {
        return collect(explode('.',$this->name))->map(fn($part) => Str::title(Str::replace('-',' ',$part)))->reverse()->join(" ");
    }
    public function getGroupAttribute(): string
    {
        $explode = explode('.',$this->name);
        if (count($explode)) {
            $group = Str::title(str_replace("-"," ", $explode[0]));
        } else {
            $group = "Others";
        }
        return $group;
    }
    $BELONGS_TO$
    $MORPH_TO$
    public function toSearchableArray(): array
    {
        return collect($this->only($this->getFillable()))->merge(['id' => $this->getKey()])->toArray();
    }
}
